                             %%%%      Books       %%%%


@book{networkflows,
  added-at = {2016-11-26T13:11:51.000+0100},
  author = {Ahuja, Ravindra K and Magnanti, Thomas L and Orlin, James B},
  biburl = {https://www.bibsonomy.org/bibtex/292c3a7a6c088ccab75431e78ee387e8c/machinelearning},
  interhash = {189993fc2ab4eb35653e712945fa8801},
  intrahash = {92c3a7a6c088ccab75431e78ee387e8c},
  keywords = {ml},
  publisher = {Prentice hall},
  timestamp = {2016-11-26T13:17:02.000+0100},
  title = {Network Flows: Theory, Algorithms, and Applications},
  year = 1993
}







						%%% Lecture Notes %%% 

@misc{LectureNotes,
	author        = {Marc Pfetsch},
	title         = {Lecture notes in Multicommodity Flows and Column Generation, \emph{Technische Universit\"at Berlin}},
	month         = {December},
	year          = {2006},
	publisher		={Technische Universit\"at Berlin}
}



@mics{BachelorThesis,
		author        = {V.S Jaddoe},
		title         = {Selecting sets of ddisjoints paths in a railway graph, \emph{Bachelor thesis}},
		month         = {June},
		year          = {2005},
		publisher		={Universiteit van Amsterdam}
}
							%%% Git %%% 
@misc{GIT,
	author = {github-repository},
	title = {Comparison of standard combinatorial optimization with reinforcement learning techniques on rescheduling problems, by Charles Dufour and Edouard Ghaleb},
	year = {2019},
	publisher = {GitHub},
	journal = {GitHub repository},
	howpublished = {\url{https://github.com/dufourc1/SemesterProjectMA3}},
}


				%%%articles%%%

@article{DAI20171481,
	title = "On solving multi-commodity flow problems: An experimental evaluation",
	journal = "Chinese Journal of Aeronautics",
	volume = "30",
	number = "4",
	pages = "1481 - 1492",
	year = "2017",
	issn = "1000-9361",
	doi = "https://doi.org/10.1016/j.cja.2017.05.012",
	url = "http://www.sciencedirect.com/science/article/pii/S100093611730122X",
	author = "Weibin Dai and Jun Zhang and Xiaoqian Sun",
	keywords = "Multi-commodity flow problem, Column generation, Lagrangian relaxation, Evaluation, Implementation",
	abstract = "Multi-commodity flow problems (MCFs) can be found in many areas, such as transportation, communication, and logistics. Therefore, such problems have been studied by a multitude of researchers, and a variety of methods have been proposed for solving it. However, most researchers only discuss the properties of different models and algorithms without taking into account the impacts of actual implementation. In fact, the true performance of a method may differ greatly across various implementations. In this paper, several popular optimization solvers for implementations of column generation and Lagrangian relaxation are discussed. In order to test scalability and optimality, three groups of networks with different structures are used as case studies. Results show that column generation outperforms Lagrangian relaxation in most instances, but the latter is better suited to networks with a large number of commodities."
}


@article{alphago,
	abstract = {The game of Go has long been viewed as the most challenging of classic games for artificial intelligence owing to its enormous search space and the difficulty of evaluating board positions and moves. Here we introduce a new approach to computer Go that uses 'value networks' to evaluate board positions and 'policy networks' to select moves. These deep neural networks are trained by a novel combination of supervised learning from human expert games, and reinforcement learning from games of self-play. Without any lookahead search, the neural networks play Go at the level of state-of-the-art Monte Carlo tree search programs that simulate thousands of random games of self-play. We also introduce a new search algorithm that combines Monte Carlo simulation with value and policy networks. Using this search algorithm, our program AlphaGo achieved a 99.8 percent winning rate against other Go programs, and defeated the human European Go champion by 5 games to 0. This is the first time that a computer program has defeated a human professional player in the full-sized game of Go, a feat previously thought to be at least a decade away.},
	added-at = {2016-05-21T09:09:48.000+0200},
	author = {Silver, David and Huang, Aja and Maddison, Chris J. and Guez, Arthur and Sifre, Laurent and van den Driessche, George and Schrittwieser, Julian and Antonoglou, Ioannis and Panneershelvam, Veda and Lanctot, Marc and Dieleman, Sander and Grewe, Dominik and Nham, John and Kalchbrenner, Nal and Sutskever, Ilya and Lillicrap, Timothy and Leach, Madeleine and Kavukcuoglu, Koray and Graepel, Thore and Hassabis, Demis},
	biburl = {https://www.bibsonomy.org/bibtex/29e987f58d895c490144693139cbc90c7/flint63},
	doi = {10.1038/nature16961},
	file = {Nature online:2016/SilverHuangEtAl16nature.pdf:PDF},
	groups = {public},
	interhash = {48430c7891aaf9fe2582faa8f5d076c1},
	intrahash = {9e987f58d895c490144693139cbc90c7},
	issn = {0028-0836},
	journal = {Nature},
	keywords = {01614 paper ai google learn algorithm},
	month = {#jan#},
	number = 7587,
	pages = {484--489},
	timestamp = {2018-04-16T12:03:12.000+0200},
	title = {Mastering the Game of {Go} with Deep Neural Networks and Tree Search},
	username = {flint63},
	volume = 529,
	year = 2016
}




@article{BranchAndCut,
	author = {Desrosiers, Jacques and Lubbecke, Marco},
	year = {2011},
	month = {01},
	pages = {},
	title = {Branch-Price-and-Cut Algorithms},
	doi = {10.1002/9780470400531.eorms0118}
}

@article{TENExample,
	author = {Masoud, Neda and Jayakrishnan, R.},
	year = {2017},
	month = {05},
	pages = {1-29},
	title = {A Decomposition Algorithm to Solve the Multi-Hop Peer-to-Peer Ride-Matching Problem},
	volume = {99},
	journal = {Transportation Research Part B: Methodological},
	doi = {10.1016/j.trb.2017.01.004}
}



@inproceedings{Skutella2008AnIT,
	title={An Introduction to Network Flows over Time},
	author={Martin Skutella},
	booktitle={Bonn Workshop of Combinatorial Optimization},
	year={2008}
}



%%% software %%%
@misc{gurobi,
	author = "Gurobi Optimization, LLC",
	title = "Gurobi Optimizer Reference Manual",
	year = 2019,
	url = "http://www.gurobi.com"
}